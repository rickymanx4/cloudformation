WafValidHostsCondition:
  Type: AWS::WAF::ByteMatchSet
  Properties:
    Name: waf-validhosts
    ByteMatchTuples:
      - FieldToMatch:
          Type: HEADER
          Data: host
        TargetString: !Ref PublicDns
        TextTransformation: NONE
        PositionalConstraint: EXACTLY

WafValidHostsRule:
  Type: AWS::WAF::Rule
  Properties:
    Name: waf-validhosts-rule
    MetricName: WafValidHostsRule
    Predicates:
      - DataId: !Ref WafValidHostsCondition
        Negated: true
        Type: ByteMatch

WebAcl:
  Type: AWS::WAF::WebACL
  Properties:
    Name: globalwebacl
    DefaultAction:
      Type: ALLOW
    MetricName: GlobalWebACL
    Rules:
      - Action:
          Type: BLOCK
        Priority: 1
        RuleId: !Ref WafValidHostsRule  

  CloudFrontDistribution:
    Type: 'AWS::CloudFront::Distribution'     
    Properties:
      DistributionConfig:
        Comment: 'Cloudfront Distribution pointing ALB Origin'
        Origins:
          - DomainName: !GetAtt EXALB.DNSName
            Id: !Ref EXALB
            CustomOriginConfig:              
              HTTPSPort: '443'
              OriginProtocolPolicy: https-only
              OriginKeepaliveTimeout: 5
              OriginReadTimeout: 30
              OriginSSLProtocols: TLSv1.2
        Enabled: true
        HttpVersion: 'http2'
        PriceClass: PriceClass_All
        DefaultCacheBehavior:        
          AllowedMethods:
            - GET
            - HEAD
            - DELETE
            - OPTIONS
            - PATCH
            - POST
            - PUT         
          ForwardedValues: !Ref ForwardedValues
          SmoothStreaming: 'false'
          TargetOriginId: !Ref 'EXALB'
          ViewerProtocolPolicy: redirect-to-https
  ForwardedValues:
    Type: AWS::CloudFront::Distribution ForwardedValues
      Cookies: all
      Headers: all
        - String
      QueryString: true
      QueryStringCacheKeys: 
        - bno



  MySNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: my-sns-topic
      Subscription:
        - Endpoint: rickymanx4@naver.com
          Protocol: email
  CPUUtilizationAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - { "Fn::ImportValue": !Sub "my-sns-topic" }
      AlarmName: test-Alarms
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 2
      Threshold: 40
      TreatMissingData: breaching
      OKActions: 
        - { "Fn::ImportValue": !Sub "my-sns-topic" }
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: InstanceId
          Value: !Ref Ec2InstanceId



      
    